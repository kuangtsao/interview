#集群中的唯一表示
broker.id=0

#broker處理消息的最大線程數，一般情況下數量為CPU的核心數
num.network.threads=2

#broker處理硬碟io的線程數，一般數值為cpu核心數2倍
num.io.threads=4

#socket的"發送"緩衝區
socket.send.buffer.bytes=102400

#socket的"接受"緩衝區
socket.receive.buffer.bytes=102400

#socker請求的最大數值
socket.request.max.bytes=104857600

#kafka數據的存放地址
log.dirs=/data/kafka/kafka-logs

#每個topic的分區個數，若是在topic創建時沒有指定，會被topic創建時的參數覆蓋
num.partitions=1

#加快log的恢復速度，預設為1
num.recovery.threads.per.data.dir=1

#topic的offset的備份份數
offsets.topic.replication.factor=1

#事務主題的複製因子
transaction.state.log.replication.factor=1

#覆蓋事務主題的mini.insync.replicas配置
transaction.state.log.min.isr=1

#每個日誌文件刪除前的保存時間，小時為單位
log.retention.hours=168

#限制segment文件的最大的大小，超過就會生成新的segment文件
log.segment.bytes=1073741824

#檢查日誌段文件的間隔時間，確定文件屬性是否達到刪除要求
log.retention.check.interval.ms=300000

#zookeeper主機地址
zookeeper.connect=localhost:2181

#連接到zookeeper的超時時間
zookeeper.connection.timeout.ms=18000

#評估重新平衡的可能性
group.initial.rebalance.delay.ms=0